---
import ChatInterfaceWorking from '../components/ChatInterfaceWorking.tsx';
import { verifyJWT } from '../lib/auth';
import '../styles/global.css';

// üîí SECURITY: Always require authentication
const cookies = Astro.cookies;
const token = cookies.get('flow_session')?.value;

// Log authentication attempt
console.log('üîê Authentication check:', {
  hasToken: !!token,
  timestamp: new Date().toISOString(),
  path: '/chat'
});

// No token = redirect to login
if (!token) {
  console.warn('‚ö†Ô∏è Unauthorized access attempt to /chat - no token');
  return Astro.redirect('/auth/login?error=unauthorized&redirect=/chat');
}

// Verify token
let userId: string;
let userEmail: string;
let userName: string;

try {
  const decoded = verifyJWT(token);
  
  if (!decoded) {
    console.warn('‚ö†Ô∏è Invalid JWT token');
    return Astro.redirect('/auth/login?error=session_expired&redirect=/chat');
  }
  
  userId = decoded.sub || decoded.id;
  userEmail = decoded.email || 'usuario@flow.ai';
  userName = decoded.name || decoded.email?.split('@')[0] || 'Usuario';
  
  // Log successful authentication
  console.log('‚úÖ User authenticated:', {
    userId: userId.substring(0, 8) + '...',
    email: userEmail,
    timestamp: new Date().toISOString()
  });
} catch (error) {
  // Token invalid or expired
  console.error('‚ùå JWT verification failed:', error instanceof Error ? error.message : 'Unknown error');
  return Astro.redirect('/auth/login?error=session_expired&redirect=/chat');
}
---

<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat - Flow</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body class="h-full m-0 p-0">
    <ChatInterfaceWorking 
      client:only="react" 
      userId={userId}
      userEmail={userEmail}
      userName={userName}
    />
  </body>
</html>
